int canDistribute(int* candies, int candiesSize, long long k, int mid) {
    long long count = 0;
    for (int i = 0; i < candiesSize; i++) {
        count += (candies[i] / mid);
        if (count >= k) return 1;
    }
    return 0;
}

int maximumCandies(int* candies, int candiesSize, long long k) {
    long long totalCandies = 0;
    int maxCandy = 0;
    
    for (int i = 0; i < candiesSize; i++) {
        totalCandies += candies[i];
        if (candies[i] > maxCandy) maxCandy = candies[i];
    }
    
    if (totalCandies < k) return 0;

    int left = 1, right = maxCandy, result = 0;
    
    while (left <= right) {
        int mid = left + (right - left) / 2;
        
        if (canDistribute(candies, candiesSize, k, mid)) {
            result = mid;
            left = mid + 1;
        } else {
            right = mid - 1;
        }
    }
    
    return result;
}
