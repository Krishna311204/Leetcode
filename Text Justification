class Solution:   
    def fullJustify(self, words, maxWidth):
        res = []
        current_words = []
        current_length = 0  

        for w in words:
            if current_words and current_length + len(w) + len(current_words) > maxWidth:
                total_spaces = maxWidth - current_length
                gaps = len(current_words) - 1

                if gaps == 0:
                    res.append(current_words[0] + ' ' * (maxWidth - len(current_words[0])))
                else:
                    space_per_gap, extra = divmod(total_spaces, gaps)
                    line = ""

                    for i in range(gaps):
                        line += current_words[i]
                        line += ' ' * space_per_gap
                        if i < extra:
                            line += ' '
                    
                    line += current_words[-1]
                    res.append(line)

                current_words = []
                current_length = 0

            current_words.append(w)
            current_length += len(w)

        if current_words:
            line = ' '.join(current_words)
            line += ' ' * (maxWidth - len(line))
            res.append(line)

        return res
