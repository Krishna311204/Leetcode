# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
import copy
class Solution:
    
    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> List[List[int]]:
        self.res = []
        self.targetSum = targetSum
        def dfs(node, pathSum, currPath):
            if(not node): return  
            pathSum += node.val
            currPath.append(node.val)
            if(not node.left and not node.right):
                if(pathSum == self.targetSum):
                    self.res.append(currPath.copy())
            else:
                dfs(node.left, pathSum, currPath)
                dfs(node.right, pathSum, currPath)
            currPath.pop()
            
        dfs(root, 0, [])
        return self.res
        
            
        
