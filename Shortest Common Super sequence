#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char* shortestCommonSupersequence(char* str1, char* str2) {
    int m = strlen(str1), n = strlen(str2);
    int dp[m + 1][n + 1];
    for (int i = 0; i <= m; i++) {
        for (int j = 0; j <= n; j++) {
            if (i == 0 || j == 0)
                dp[i][j] = i + j;
            else if (str1[i - 1] == str2[j - 1])
                dp[i][j] = dp[i - 1][j - 1] + 1;
            else
                dp[i][j] = (dp[i - 1][j] < dp[i][j - 1]) ? dp[i - 1][j] + 1 : dp[i][j - 1] + 1;
        }
    }
    char* result = (char*)malloc(dp[m][n] + 1);
    result[dp[m][n]] = '\0';
    int i = m, j = n, index = dp[m][n] - 1;
    while (i > 0 || j > 0) {
        if (i > 0 && j > 0 && str1[i - 1] == str2[j - 1]) {
            result[index--] = str1[i - 1];
            i--, j--;
        } else if (j > 0 && (i == 0 || dp[i][j - 1] < dp[i - 1][j])) {
            result[index--] = str2[j - 1];
            j--;
        } else {
            result[index--] = str1[i - 1];
            i--;
        }
    }
    return result;
}
