#include <stdio.h>
#include <stdlib.h>
#include <string.h>

const char *phone_map[] = {
    "", "", "abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"
};

void backtrack(char **result, int *returnSize, char *current, const char *digits, int index) {
    if (digits[index] == '\0') {  
        result[*returnSize] = (char *)malloc(strlen(current) + 1);
        strcpy(result[*returnSize], current);
        (*returnSize)++;
        return;
    }

    const char *letters = phone_map[digits[index] - '0'];
    for (int i = 0; letters[i] != '\0'; i++) {
        current[index] = letters[i];
        backtrack(result, returnSize, current, digits, index + 1);
    }
}

char **letterCombinations(char *digits, int *returnSize) {
    *returnSize = 0;
    if (digits[0] == '\0') return NULL;

    int maxCombinations = 1;
    for (int i = 0; digits[i] != '\0'; i++) {
        maxCombinations *= strlen(phone_map[digits[i] - '0']);  
    }

    char **result = (char **)malloc(maxCombinations * sizeof(char *));
    char *current = (char *)malloc(strlen(digits) + 1);  
    current[strlen(digits)] = '\0';  

    backtrack(result, returnSize, current, digits, 0);

    free(current);  
    return result;
}
