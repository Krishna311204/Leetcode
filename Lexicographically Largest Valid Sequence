class Solution(object):
    def constructDistancedSequence(self, n):
        """
        :type n: int
        :rtype: List[int]
        """
        def generate(n, sequence, used, pos):
            if pos == len(sequence):
                return True
            if sequence[pos] != 0:
                return generate(n, sequence, used, pos + 1)
            
            for num in range(n, 0, -1):
                if not used[num]:
                    if num == 1:
                        sequence[pos] = 1
                        used[num] = True
                        if generate(n, sequence, used, pos + 1):
                            return True
                        sequence[pos] = 0
                        used[num] = False
                    elif pos + num < len(sequence) and sequence[pos + num] == 0:
                        sequence[pos] = sequence[pos + num] = num
                        used[num] = True
                        if generate(n, sequence, used, pos + 1):
                            return True
                        sequence[pos] = sequence[pos + num] = 0
                        used[num] = False
            
            return False
        
        sequence = [0] * (2 * n - 1)
        used = [False] * (n + 1)
        generate(n, sequence, used, 0)
        return sequence
